<Window x:Class="TrendAnalysis.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:converters="clr-namespace:TrendAnalysis.UI.Converters"
        xmlns:ap="clr-namespace:TrendAnalysis.UI.AttachedProperties"
        xmlns:controls="clr-namespace:TrendAnalysis.UI.Controls"
        xmlns:local="clr-namespace:TrendAnalysis.UI.Controls"
        xmlns:viewModel="clr-namespace:TrendAnalysis.ViewModel;assembly=TrendAnalysis.ViewModel"
        xmlns:oxy="http://oxyplot.org/wpf"
        mc:Ignorable="d"
        Title="Trend Analysis App" Height="700" Width="1200" MinHeight="400" MinWidth="600">

    <Window.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
        
        <Style x:Key="ModernButton" TargetType="Button">
            <Setter Property="Background" Value="#007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#005A8D"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#003D66"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ComboBoxToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="templateRoot" Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="3"
                        SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="18"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="splitBorder" Grid.Column="1"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,0,0"
                                Background="#E0E0E0" CornerRadius="0,3,3,0">
                                    <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                                  Data="M0,0 L4,4 L8,0 Z" Fill="#333333">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleY="1" CenterY="0.5"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                        <Path.RenderTransformOrigin>0.5,0.5</Path.RenderTransformOrigin>
                                    </Path>
                                </Border>
                            </Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="splitBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#C0C0C0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="splitBorder" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="#A0A0A0" Duration="0:0:0.1"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="RenderTransform.Children[0].(ScaleTransform.ScaleY)" To="-1" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="arrow" Storyboard.TargetProperty="RenderTransform.Children[0].(ScaleTransform.ScaleY)" To="1" Duration="0"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="#CCCCCC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="3" Grid.ColumnSpan="2">
                                    <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}"
                                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"/>
                                    <ToggleButton Grid.Column="1"
                                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                  Style="{StaticResource ComboBoxToggleButtonStyle}"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  Background="Transparent"
                                                  Width="24"/>
                                </Grid>
                            </Border>
                           
                            <Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Placement="Bottom" 
                                   Margin="1" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderThickness="1" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                    <ScrollViewer MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ComboBoxScrollViewer" TargetType="ScrollViewer">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid>
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
        </Style>
        <Style TargetType="ComboBoxItem">
            <Setter Property="Padding" Value="5"/>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="10" HorizontalAlignment="Center">
            <TextBlock Text="Start Date:" VerticalAlignment="Center" Margin="0,0,5,0" FontWeight="SemiBold"/>
            <DatePicker Width="120" Margin="0,0,15,0"
                        SelectedDate="{Binding StartDate, Mode=TwoWay}"/>

            <TextBlock Text="End Date:" VerticalAlignment="Center" Margin="0,0,5,0" FontWeight="SemiBold"/>
            <DatePicker Width="120" Margin="0,0,15,0"
                        SelectedDate="{Binding EndDate, Mode=TwoWay}"/>

            <TextBlock Text="Chart Type:" VerticalAlignment="Center" Margin="20,0,5,0" FontWeight="SemiBold"/>
            <ComboBox Width="150" SelectedItem="{Binding SelectedRenderMode, Mode=TwoWay}"
                      ItemsSource="{Binding RenderModes}" Margin="0,0,10,0"/>

            <TextBlock Text="Rendering Method:" VerticalAlignment="Center" Margin="20,0,5,0" FontWeight="SemiBold"/>
            <ComboBox Width="150" SelectedItem="{Binding SelectedRenderingMethod, Mode=TwoWay}"
                      ItemsSource="{Binding RenderingMethods}"/>

            <Button Margin="20,0,0,0" Content="Load Data" Width="120" Style="{StaticResource ModernButton}" Cursor="Hand"
                 Command="{Binding LoadDataCommand}"/>

        </StackPanel>

        <Border Grid.Row="1" Margin="10,0,10,10" Background="#F0F0F0" BorderBrush="#CCCCCC" BorderThickness="1" CornerRadius="5">
            <Grid>
                <Canvas x:Name="DrawingCanvas" Background="Transparent"
                ap:CanvasChartExtensions.ChartData="{Binding CurrentTrendData}"
                ap:CanvasChartExtensions.ChartRenderMode="{Binding SelectedRenderMode}"
                Visibility="{Binding SelectedRenderingMethod, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Softverski (Canvas)}">
                </Canvas>

                <oxy:PlotView Model="{Binding OxyPlotModel}"
                      Visibility="{Binding SelectedRenderingMethod, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Hardverski (OxyPlot)}"/>

                <controls:HardwareAcceleratedChartControl
                    x:Name="MyDrawingVisualChart"
                      RenderTrigger="{Binding RenderTrigger}"
                      TrendData="{Binding CurrentTrendData}"
                      ChartType="{Binding SelectedRenderMode}"
                      Visibility="{Binding SelectedRenderingMethod, Converter={StaticResource StringToVisibilityConverter}, ConverterParameter=Hardverski (DrawingVisual)}"/>
            </Grid>
        </Border>

                <Grid Grid.Row="2" Margin="10,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="{Binding StatusMessage}" Grid.Column="0" VerticalAlignment="Center" Margin="5,0" FontWeight="SemiBold"/>
            <ProgressBar Grid.Column="1" Height="10" Width="150"
                         IsIndeterminate="{Binding IsLoading}"
                         Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>
    </Grid>
</Window>